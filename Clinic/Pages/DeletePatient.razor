@page "/deletepatient/{Id}"

@using Clinic.Data
@using System.Net.Http
@using System.Net.Http.Json
@using Clinic.Data.RequestAndResponses.Request
@using System.Text.Json

@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Eliminar Paciente</h3>

<p>Deseas eliminar a paciente: @name ?</p>

<div>
	<button @onclick="Cancelar">Cancelar</button>
	<button @onclick="Eliminar">Eliminar</button>
</div>

@code {
	[Parameter]
	public string? Id { get; set; }
	public string Url = "/api/Patient";
	private string name;
	BaseResponse<Patient> baseResponse = new BaseResponse<Patient>();

	private void Cancelar() => NavigationManager.NavigateTo("/patients");

	private async Task Eliminar()
	{
		var response = await Http.DeleteAsync(Url + "?Id=" + Id);
		baseResponse = response.Content.ReadFromJsonAsync<BaseResponse<Patient>>().Result;

		NavigationManager.NavigateTo("/patients");
	}

	protected override async Task OnInitializedAsync()
	{
		if (!string.IsNullOrEmpty(Id))
		{
			try
			{
				baseResponse = await Http.GetFromJsonAsync<BaseResponse<Patient>>(Url + "?Id=" + Id);
				if (baseResponse != null && baseResponse.Body != null)
				{
					name = baseResponse.Body.Person.FirstName + " " + baseResponse.Body.Person.LastName;
				}
				else
				{
					Console.WriteLine("Patient not found.");
				}
			}
			catch (Exception ex)
			{
				Console.WriteLine($"Exception: {ex.Message}");
			}
		}
	}
}